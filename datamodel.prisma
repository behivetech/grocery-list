type User {
    id: ID! @id
    createdAt: DateTime! @createdAt
    email: String! @unique
    hash: String!
    salt: String!
    name: String!
    lists: [List] @relation(onDelete: CASCADE)
    sharedLists: [ListSharedUsers] @relation(onDelete: CASCADE)
    sessions: [UserSession]! @relation(onDelete: CASCADE)
    updatedAt: DateTime! @updatedAt
}

type UserSession {
    id: ID! @id
    createdAt: DateTime! @createdAt
    ttl: Int!
    user: User! @relation(link: INLINE)
}

type List {
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    collaborated: Boolean! @default(value: false)
    name: String!
    owner: User! @relation(link: INLINE)
    sharedWith: [ListSharedUsers] @relation(onDelete: CASCADE)
    items: [Item] @relation(onDelete: CASCADE)
}

type Item {
    id: ID! @id
    need: Boolean! @default(value: false)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    name: String!
    list: List! @relation(link: INLINE)
}

type ListSharedUsers {
    id: ID! @id
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
    user: User @relation(link: INLINE)
    list: List @relation(link: INLINE)
}
